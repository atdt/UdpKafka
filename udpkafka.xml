<?xml version="1.0" encoding="UTF-8"?>
<project name="udpkafka" default="all">
  
  
  <property file="udpkafka.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.kafka-0.8.0.classpath">
    <pathelement location="${basedir}/lib/kafka-0.8.01.jar"/>
  </path>
  
  <path id="library.scala-compiler.classpath">
    <pathelement location="${basedir}/lib/akka-actors1.jar"/>
    <pathelement location="${basedir}/lib/jline1.jar"/>
    <pathelement location="${basedir}/lib/scala-actors-migration1.jar"/>
    <pathelement location="${basedir}/lib/scala-actors1.jar"/>
    <pathelement location="${basedir}/lib/scala-compiler1.jar"/>
    <pathelement location="${basedir}/lib/scala-library1.jar"/>
    <pathelement location="${basedir}/lib/scala-partest1.jar"/>
    <pathelement location="${basedir}/lib/scala-reflect1.jar"/>
    <pathelement location="${basedir}/lib/scala-swing1.jar"/>
    <pathelement location="${basedir}/lib/scalap1.jar"/>
    <pathelement location="${basedir}/lib/typesafe-config1.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <path id="library.scala-compiler.classpath">
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/akka-actors.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/jline.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-actors-migration.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-actors.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-compiler.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-library.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-partest.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-reflect.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scala-swing.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/scalap.jar"/>
    <pathelement location="/Users/ori/IdeaProjects/UdpKafka/lib/typesafe-config.jar"/>
  </path>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_udpkafka.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.udpkafka" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.udpkafka" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.udpkafka:jar" value="${basedir}/out/artifacts/UdpKafka_jar"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.UdpKafka.jar" value="${artifacts.temp.dir}/UdpKafka.jar"/>
  </target>
  
  <target name="artifact.udpkafka:jar" depends="init.artifacts, compile.module.udpkafka" description="Build &#39;UdpKafka:jar&#39; artifact">
    <property name="artifact.temp.output.udpkafka:jar" value="${artifacts.temp.dir}/UdpKafka_jar"/>
    <mkdir dir="${artifact.temp.output.udpkafka:jar}"/>
    <jar destfile="${temp.jar.path.UdpKafka.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${udpkafka.output.dir}"/>
      <zipfileset file="${basedir}/lib/kafka-0.8.01.jar"/>
      <zipfileset file="${basedir}/lib/scala-compiler1.jar"/>
      <zipfileset file="${basedir}/lib/scala-library1.jar"/>
      <zipfileset file="${basedir}/lib/akka-actors1.jar"/>
      <zipfileset file="${basedir}/lib/scala-partest1.jar"/>
      <zipfileset file="${basedir}/lib/jline1.jar"/>
      <zipfileset file="${basedir}/lib/scala-actors1.jar"/>
      <zipfileset file="${basedir}/lib/scalap1.jar"/>
      <zipfileset file="${basedir}/lib/scala-reflect1.jar"/>
      <zipfileset file="${basedir}/lib/scala-actors-migration1.jar"/>
      <zipfileset file="${basedir}/lib/scala-swing1.jar"/>
      <zipfileset file="${basedir}/lib/typesafe-config1.jar"/>
    </jar>
    <copy file="${temp.jar.path.UdpKafka.jar}" tofile="${artifact.temp.output.udpkafka:jar}/UdpKafka.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.udpkafka:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.udpkafka:jar}"/>
    <copy todir="${artifact.output.udpkafka:jar}">
      <fileset dir="${artifact.temp.output.udpkafka:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>